### 2016 12 21 Yves
### copied initially from nginx default server configuration


# This one makes sure we do not accept unwanted connection on port 80 (direct ip address connection
server {
    listen     80 default_server;
    return 444;
   }

server {
    listen 443 default_server;
    server_name  ariana.dynamease.net;
#    server_name  nginx_ariana;
#    resolver 	 ariana;

    add_header X-debug-serverstart $uri always;

    error_log  /var/log/nginx/error.log debug;
    access_log  /var/log/nginx/access.log  main;

    include conf.d/include/ssl.conf;
 
    location / {
        add_header X-debug-location "la base du defuaut" always;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    
#    location ^~/jenkins/ {
#    	     rewrite /jenkins/(.*) /$1 break;
#	     set $debugmessage "Jenkins location";
#	     set $debugmessage $debugmessage$uri;
#	     add_header X-debug-location $debugmessage always;
#    	     add_header X-debug-mappingcontainer $container always;
#	     add_header X-debug-mappingtargeturi $targeturi always;
#	     proxy_pass http://jenkins:8080;
#	     }

#    location ~/(?<appli>[^/]+)/(?<appliuri>.*) {
#	     add_header X-debug-location "la super regexp" always;
#    	     add_header X-debug-mappingcontainer $appli always;
#	     add_header X-debug-mappingtargeturi $appliuri always;
#	     return 301 https://$appli.dynamease.net/$appliuri;
#	     proxy_pass https://$appli.dynamease.net/$appliuri;
#	     proxy_set_header Host $appli.dynamease.net;
#	     }

    # use the first part of the uri to route to appropriate appli on this server
    # ex /jenkins/ will give access to jenkins container
#    location ~/(.*)/ {
#    	     add_header X-debug-mappingcontainer $container always;
#	     add_header X-debug-mappingtargeturi $targeturi always;
#	     set $debugmessage "regex location";
#	     set $debugmessage $debugmessage$uri;
#	     add_header X-debug-location $debugmessage always;
#	     add_header X-debug-uri $uri always;

#    	     rewrite /(.*) /$targeturi break;
#	     proxy_pass http://$container;
#    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
#    error_page   500 502 503 504  /50x.html;
#    location = /50x.html {
#        root   /usr/share/nginx/html;
#    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

